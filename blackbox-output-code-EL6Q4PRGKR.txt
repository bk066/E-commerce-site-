import React, { useState } from "react";
import "./App.css";

const PRODUCTS = {
  Groceries: [
    { id: 1, name: "Rice (1kg)", price: 80 },
    { id: 2, name: "Wheat Flour (1kg)", price: 50 },
    { id: 3, name: "Sugar (1kg)", price: 45 },
    { id: 4, name: "Cooking Oil (1L)", price: 180 },
  ],
  "Cleaning Products": [
    { id: 5, name: "Dishwash Liquid (500ml)", price: 120 },
    { id: 6, name: "Floor Cleaner (1L)", price: 150 },
    { id: 7, name: "Laundry Detergent (1kg)", price: 200 },
    { id: 8, name: "Disinfectant Spray (300ml)", price: 250 },
  ],
};

const DISCOUNT_THRESHOLD = 2500;
const DISCOUNT_RATE = 0.1; // 10%

function App() {
  const [category, setCategory] = useState("Groceries");
  const [cart, setCart] = useState([]);
  const [user, setUser ] = useState({
    name: "",
    contact: "",
    address: "",
  });
  const [registered, setRegistered] = useState(false);

  // Add product to cart
  const addToCart = (product) => {
    setCart((prev) => {
      const existing = prev.find((item) => item.id === product.id);
      if (existing) {
        return prev.map((item) =>
          item.id === product.id ? { ...item, qty: item.qty + 1 } : item
        );
      } else {
        return [...prev, { ...product, qty: 1 }];
      }
    });
  };

  // Remove product from cart
  const removeFromCart = (productId) => {
    setCart((prev) =>
      prev
        .map((item) =>
          item.id === productId ? { ...item, qty: item.qty - 1 } : item
        )
        .filter((item) => item.qty > 0)
    );
  };

  // Calculate total price before discount
  const total = cart.reduce((acc, item) => acc + item.price * item.qty, 0);

  // Calculate discount
  const discount = total >= DISCOUNT_THRESHOLD ? total * DISCOUNT_RATE : 0;

  // Final amount after discount
  const finalAmount = total - discount;

  // Handle user input change
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setUser ((prev) => ({ ...prev, [name]: value }));
  };

  // Handle registration submit
  const handleRegister = (e) => {
    e.preventDefault();
    if (!user.name || !user.contact || !user.address) {
      alert("Please fill all registration fields.");
      return;
    }
    setRegistered(true);
  };

  return (
    <div className="App">
      <header>
        <h1>Household Utility Store</h1>
        <nav>
          {Object.keys(PRODUCTS).map((cat) => (
            <button
              key={cat}
              className={cat === category ? "active" : ""}
              onClick={() => setCategory(cat)}
              aria-label={`View ${cat} category`}
            >
              {cat}
            </button>
          ))}
        </nav>
      </header>

      <main>
        <section className="product-catalog">
          <h2>{category}</h2>
          <div className="product-grid">
            {PRODUCTS[category].map((product) => (
              <div key={product.id} className="product-card">
                <div className="product-name">{product.name}</div>
                <div className="product-price">Rs. {product.price}</div>
                <button
                  className="add-btn"
                  onClick={() => addToCart(product)}
                  aria-label={`Add ${product.name} to cart`}
                >
                  Add to Cart
                </button>
              </div>
            ))}
          </div>
        </section>

        <aside className="cart-section">
          <h2>Shopping Cart</h2>
          {cart.length === 0 ? (
            <p>Your cart is empty.</p>
          ) : (
            <ul className="cart-list">
              {cart.map((item) => (
                <li key={item.id} className="cart-item">
                  <span>
                    {item.name} x {item.qty}
                  </span>
                  <span>Rs. {item.price * item.qty}</span>
                  <button
                    className="remove-btn"
                    onClick={() => removeFromCart(item.id)}
                    aria-label={`Remove one ${item.name} from cart`}
                  >
                    &times;
                  </button>
                </li>
              ))}
            </ul>
          )}
          <div className="cart-summary">
            <p>Total: Rs. {total.toFixed(2)}</p>
            {discount > 0 && (
              <p className="discount">
                Discount (10%): -Rs. {discount.toFixed(2)}
              </p>
            )}
            <p className="final-amount">Amount Payable: Rs. {finalAmount.toFixed(2)}</p>
          </div>
        </aside>
      </main>

      <section className="registration-section">
        <h2>User Registration</h2>
        {registered ? (
          <div className="success-message">
            <p>Thank you, {user.name}! Your details have been registered.</p>
            <p>Contact: {user.contact}</p>
            <p>Delivery Address: {user.address}</p>
          </div>
        ) : (
          <form onSubmit={handleRegister} className="registration-form">
            <label>
              Name:
              <input
                type="text"
                name="name"
                value={user.name}
                onChange={handleInputChange}
                required
                placeholder="Your full name"
              />
            </label>
            <label>
              Contact Number:
              <input
                type="tel"
                name="contact"
                value={user.contact}
                onChange={handleInputChange}
                required
                placeholder="e.g. +91 9876543210"
                pattern="^\+?\d{10,15}$"
                title="Enter a valid contact number"
              />
            </label>
            <label>
              Delivery Address:
              <textarea
                name="address"
                value={user.address}
                onChange={handleInputChange}
                required
                placeholder="Your delivery address"
                rows={3}
              />
            </label>
            <button type="submit" className="register-btn">
              Register
            </button>
          </form>
        )}
      </section>

      <footer>
        <p>Â© 2024 Household Utility Store</p>
      </footer>
    </div>
  );
}

export default App;